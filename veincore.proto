package protobuf;

message Vein {
    message Command {
        enum CommandType {
            ASYNC_ENTITY_UPDATE = 1;
            ASYNC_PEER_ADDED = 2; //NEW
            ASYNC_PEER_REMOVED = 3; //NEW
            ASYNC_ENTITY_ADDED = 4; //NEW
            ASYNC_ENTITY_REMOVED = 5; //NEW

            REQUEST_ENTITY_DATA = 101;
            REQUEST_ENTITY_START_ASYNC_UPDATE = 102;
            REQUEST_ENTITY_STOP_ASYNC_UPDATE = 103;

            MESSAGE_DEBUG = 201;
            MESSAGE_ERROR = 202;

            KILL_HUB = 300;
            INIT_ENTITY = 301; //UNUSED
            INIT_HUB = 302;
            INIT_PEER = 303; //UNUSED
        }
        required CommandType type = 1 [default = ASYNC_ENTITY_UPDATE];
        optional bytes uidSender = 2;  //rfc4122 representation of QUid
        repeated bytes uidReceiverList = 3; //rfc4122 representation of QUuid, can be used to multicast messages?
        repeated Vein.Peer peerList = 4;
    }
    message Entity {
        required string entityName = 100;
        repeated int32 modifiers = 101 [packed=true];
        optional bytes dataVariant = 102;
        optional int32 QMetaType = 103; //used for QVariant conversions
    }
    message Peer {
        required string peerName = 1;
        repeated Entity peerEntities = 2;
    }
}

message VeinProtocol {
    repeated Vein.Command command = 1;
}
